                            | # copy_block - Copy src to dest and return xor checksum of src 
                            | # author: asciibase64
                            | 
                            | # Execution begins at address 0
0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack, %rsp      # Set up stack pointer
0x00a: 804800000000000000   |     call main               # Execute main program
0x013: 00                   |     halt                    # Terminate program
                            | 
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     |     .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq src, %rdi
0x052: 30f63000000000000000 |     irmovq dest, %rsi
0x05c: 30f20300000000000000 |     irmovq $3, %rdx
0x066: 807000000000000000   |     call copy
0x06f: 00                   |     halt
                            | 
                            | # long copy_block(long *src, long *dest, long len)
0x070:                      | copy:
0x070: 6300                 |     xorq %rax, %rax
                            | 
0x072:                      |     loop: 
0x072: 50170000000000000000 |         mrmovq (%rdi), %rcx
0x07c: 30f80800000000000000 |         irmovq $8, %r8
0x086: 6087                 |         addq %r8, %rdi
0x088: 40160000000000000000 |         rmmovq %rcx, (%rsi)
0x092: 6086                 |         addq %r8, %rsi
0x094: 6310                 |         xorq %rcx, %rax
0x096: 30f80100000000000000 |         irmovq $1, %r8
0x0a0: 6128                 |         subq %rdx, %r8
                            | 
0x0a2:                      |     check: 
0x0a2: 6222                 |         andq %rdx, %rdx
0x0a4: 767200000000000000   |         jg loop
                            |     
0x0ad: 90                   |     ret
                            | 
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |     .pos 0x200
0x200:                      | stack: 

                            | # rsum_list - Recursive version of sum_list
                            | # author: asciibase64
                            | 
                            | # Execution begins at address 0
0x000:                      |     .pos 0
0x000: 30f40002000000000000 |     irmovq stack, %rsp      # Set up stack pointer
0x00a: 804800000000000000   |     call main               # Execute main program
0x013: 00                   |     halt                    # Terminate program
                            | 
                            | # Sample linked list
0x018:                      |     .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |     .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |     .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |     .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq ele1, %rdi
0x052: 805c00000000000000   |     call rsum_list
0x05b: 00                   |     halt
                            | 
                            | # long rsum_list(list_ptr ls)
0x05c:                      | rsum_list:
0x05c: 6300                 |     xorq %rax, %rax
                            |     
0x05e:                      |     check: 
0x05e: 6277                 |         andq %rdi, %rdi
0x060: 738e00000000000000   |         je stop
                            | 
0x069:                      |     loop: 
0x069: 50670000000000000000 |         mrmovq (%rdi), %rsi
0x073: 6060                 |         addq %rsi, %rax
0x075: 50770800000000000000 |         mrmovq 8(%rdi), %rdi
0x07f: a00f                 |         pushq %rax
0x081: 805c00000000000000   |         call rsum_list
0x08a: b06f                 |         popq %rsi
0x08c: 6060                 |         addq %rsi, %rax
                            | 
0x08e:                      |     stop: 
0x08e: 90                   |         ret
                            | 
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |     .pos 0x200
0x200:                      | stack: 
